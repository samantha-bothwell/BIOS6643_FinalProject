install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='sjbothwell',
token='C8417462BA59FEDDD3B801DF4FB2AB30',
secret='UXIR2ow9Hyu3eBnX7LM8cL3iIB54vDuoKY3Suic1')
rsconnect::deployApp("Z:\Shared Projects\Shared Breathing Institute Projects\2020.09.21 Anderson Propeller Health Adherence Trajectories\Seasonal_Asthma\app.R")
rsconnect::deployApp("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Seasonal_Asthma/app.R")
rsconnect::deployApp("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Seasonal_Asthma")
rsconnect::deployApp("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Seasonal_Asthma")
shiny::runApp('Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Seasonal_Asthma')
rsconnect::deployApp("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Seasonal_Asthma")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#### Load in the data
wt <- read.csv("D:/CU/Fall 2020/BIOS 6643/Project/BIOS6643_FinalProject/DataProcessed/daily_weights_with_confounding.csv")
#### Plot data x-axis: study_days, y-axis: wt_lb, group by: participant_id
library(ggplot2)
library(gridExtra)
g1 <- ggplot(data = wt, aes(x = study_days, y = wt_lb, group = participant_id, color = as.factor(cohort))) +
geom_line()
#### Plot data x-axis: weight_dates, y-axis: wt_lb, group by: participant_id
g2 <- ggplot(data = wt, aes(x = as.Date(weight_dates), y = wt_lb, group = participant_id, color = as.factor(cohort))) +
geom_line()
grid.arrange(g1, g2, ncol = 1)
# Get last measurement
library(dplyr)
dem <- wt %>%
group_by(participant_id) %>%
arrange(study_days) %>%
summarize(`Total Measures` = n(), `Time Span` = max(study_days, na.rm = T), Cohort = cohort,
`Baseline Weight` = first(na.omit(wt_lb)), Age = age, Sex = sex, Race = race, Ethnicity = ethnicity,
`Marital Status` = marital_status) %>%
slice(1)
# Relevel factors
dem$Sex <- as.factor(dem$Sex); dem$Race <- as.factor(dem$Race)
dem$Sex <- recode_factor(dem$Sex, "0" = "Female", "1" = "Male")
dem$Ethnicity <- as.factor(dem$Ethnicity); dem$`Marital Status` <- as.factor(dem$`Marital Status`)
dem$Race <- recode_factor(dem$Race, "1" = "American Indian or Alaska Native", "2" = "Asian", "3" = "Black",
"4" = "Native Hawaiian or other Pacific Islander", "5" = "White", "6" = "Not Reported", "7" = "Other")
dem$Ethnicity <- recode_factor(dem$Ethnicity, "1" = "Hispanic or Latino", "2" = "Non Hispanic or Latino",
"3" = "Other")
dem$`Marital Status` <- recode_factor(dem$`Marital Status`, "1" = "Single", "2" = "Committed Relationship",
"3" = "Married", "4" = "Separated", "5" = "Divorced", "6" = "Widowed", "7" = "Not Reported")
# table 1 by cohort
library(table1)
# Format table
my.render.cont <- function(x) {
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (95% CI)"=sprintf("%s (%s, %s)",
MEAN, round(quantile(x, 0.025),2), round(quantile(x, 0.975),2))))
}
# make table
tb1 <- table1(~ `Age` + `Sex` + `Race` + `Ethnicity` + `Marital Status` +
`Total Measures` + `Baseline Weight`|`Cohort`,
data = dem, render.continuous = my.render.cont) # , droplevels=F)
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (95% CI)"=sprintf("%s (%s, %s)",
MEAN, round(quantile(x, 0.025, na.rm = T),2), round(quantile(x, 0.975, na.rm = T),2))))
# Format table
my.render.cont <- function(x) {
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (95% CI)"=sprintf("%s (%s, %s)",
MEAN, round(quantile(x, 0.025, na.rm = T),2), round(quantile(x, 0.975, na.rm = T),2))))
}
# make table
tb1 <- table1(~ `Age` + `Sex` + `Race` + `Ethnicity` + `Marital Status` +
`Total Measures` + `Baseline Weight`|`Cohort`,
data = dem, render.continuous = my.render.cont) # , droplevels=F)
dem$Cohort <- as.factor(dem$Cohort)
# make table
tb1 <- table1(~ `Age` + `Sex` + `Race` + `Ethnicity` + `Marital Status` +
`Total Measures` + `Baseline Weight`|`Cohort`,
data = dem, render.continuous = my.render.cont) # , droplevels=F)
### Read in data
traj <- readRDS("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Data/ctrl_traj.rds")
View(traj)
### Remove days that create big gaps
traj <- traj[-665,]
### Summarize
traj.sum <- traj %>%
group_by(uid) %>%
summarise(Day.min = min(as.Date(Day)), Day.max = max(as.Date(Day)),
Day.span = Day.max - Day.min, Total.records = length(unique(Day)))
View(traj.sum)
traj.sum$uid <- as.numeric(traj.sum$uid)
### Summarize
traj.sum <- traj %>%
group_by(uid) %>%
summarise(Day.min = min(as.Date(Day)), Day.max = max(as.Date(Day)),
Day.span = Day.max - Day.min, Total.records = length(unique(Day)))
83/51
51/83
145/178
69/200
95/199
24/25
23/28
10/62
197/205
42/173
196/210
180/229
122/241
205/277
177/279
289/292
16/34
168/293
172/258
### Read in data
traj <- readRDS("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Data/ctrl_traj.rds")
### Remove days that create big gaps
traj <- traj[-665,] # uid 15 went from day 26 to day 90 - removed day 90
traj <- traj[-1254,] # uid 3 went from day 15 to day 35 - removed day 35
traj <- traj[-410,] # uid 11 went from day 44 to day 174 - removed day 174
traj <- traj[-608,] # uid 13 went from day 1 to day 47 - removed day 1
### Summarize
traj.sum <- traj %>%
group_by(uid) %>%
summarise(Day.min = min(as.Date(Day)), Day.max = max(as.Date(Day)),
Day.span = Day.max - Day.min, Total.records = length(unique(Day)))
14/15
41/53
difftime("2020-04-06", "2020-04-21")
### Read in data
traj <- readRDS("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Data/ctrl_traj.rds")
### Remove days that create big gaps
traj <- traj[-665,] # uid 15 went from day 26 to day 90 - removed day 90
traj <- traj[-1254,] # uid 3 went from day 15 to day 35 - removed day 35
traj <- traj[-410,] # uid 11 went from day 44 to day 174 - removed day 174
### Read in data
traj <- readRDS("Z:/Shared Projects/Shared Breathing Institute Projects/2020.09.21 Anderson Propeller Health Adherence Trajectories/Data/ctrl_traj.rds")
### Remove days that create big gaps
traj <- traj[-665,] # uid 15 went from day 26 to day 90 - removed day 90
traj <- traj[-1254,] # uid 3 went from day 15 to day 35 - removed day 35
9/15
### Summarize
traj.sum <- traj %>%
group_by(uid) %>%
summarise(Day.min = min(as.Date(Day)), Day.max = max(as.Date(Day)),
Day.span = Day.max - Day.min, Total.records = length(unique(Day)), avg = mean(Adherence)))
### Summarize
traj.sum <- traj %>%
group_by(uid) %>%
summarise(Day.min = min(as.Date(Day)), Day.max = max(as.Date(Day)),
Day.span = Day.max - Day.min, Total.records = length(unique(Day), avg = mean(Adherence)))
### Summarize
traj.sum <- traj %>%
group_by(uid) %>%
summarise(Day.min = min(as.Date(Day)), Day.max = max(as.Date(Day)),
Day.span = Day.max - Day.min, Total.records = length(unique(Day), avg = mean(Adherence, na.rm = T)))
### Summarize
traj.sum <- traj %>%
group_by(uid) %>%
summarise(Day.min = min(as.Date(Day)), Day.max = max(as.Date(Day)),
Day.span = Day.max - Day.min, Total.records = length(unique(Day)), avg = mean(Adherence, na.rm = T))
